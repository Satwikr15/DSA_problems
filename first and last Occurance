class Solution {
    public int[] searchRange(int[] nums, int target) {
        int first=firstO(nums,target);
        int last=lastO(nums,target);
        return new int[]{first,last};
    }
    public static int firstO(int[] arr, int x){
        int low=0;
        int high=arr.length-1;
        int ans=-1;
        while(low <=high){
            int mid=low+(high-low)/2;
            if(arr[mid]==x){
                ans=mid;
                high=mid-1;
            }
            else if (arr[mid] < x) {
                low = mid + 1; 
            } else {
                high = mid - 1;
            }

        }
        return ans;
    }
    public static int lastO(int[] arr,int x){
        int low=0;
        int high=arr.length-1;
        int ans=-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(arr[mid]==x){
                ans=mid;
                low=mid+1;
            }
            else if(arr[mid]<x){
                low=mid+1;
            }
            else{
                high=mid-1;
            }
        }
        return ans;
    }
}
